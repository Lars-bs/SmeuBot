// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmeuBase;

namespace SmeuBase.Migrations.Sqlite
{
    [DbContext(typeof(SmeuContextSqlite))]
    [Migration("20190814181308_AddDuplicatesTable")]
    partial class AddDuplicatesTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("SmeuBase.Duplicate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("Author");

                    b.Property<DateTime>("Date");

                    b.Property<ulong>("MessageId");

                    b.Property<int>("OriginalId");

                    b.Property<int?>("SuspensionId");

                    b.HasKey("Id");

                    b.HasIndex("OriginalId");

                    b.HasIndex("SuspensionId")
                        .IsUnique();

                    b.ToTable("Duplicates");
                });

            modelBuilder.Entity("SmeuBase.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<ulong>("Author");

                    b.Property<DateTime>("Date");

                    b.Property<ulong>("MessageId");

                    b.Property<string>("Smeu")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("SmeuBase.Suspension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<string>("Reason")
                        .IsRequired();

                    b.Property<ulong?>("Revoker");

                    b.Property<ulong>("Suspender");

                    b.Property<ulong>("User");

                    b.HasKey("Id");

                    b.ToTable("Suspensions");
                });

            modelBuilder.Entity("SmeuBase.Duplicate", b =>
                {
                    b.HasOne("SmeuBase.Submission", "Original")
                        .WithMany("Duplicates")
                        .HasForeignKey("OriginalId")
                        .HasConstraintName("ForeignKey_Duplicate_Submission")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("SmeuBase.Suspension", "Suspension")
                        .WithOne("Duplicate")
                        .HasForeignKey("SmeuBase.Duplicate", "SuspensionId")
                        .HasConstraintName("ForeignKey_Duplicate_Suspension")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
